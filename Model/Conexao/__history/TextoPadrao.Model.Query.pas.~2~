unit TextoPadrao.Model.Query;

interface

uses
  TextoPadrao.Model.Conexao.Interfaces,
  FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  Data.DB, FireDAC.Comp.Client;

type
  TQuery = class(TInterfacedObject, iQuery)
  private
  public
    constructor Create;
    destructor Destroy; override;
    class function New(): iQuery;
    function Query(pComando: string): TFDQuery;
    function ExecSQL(pComando: string): Boolean;
  

end;

implementation

 { TQuery }

constructor TQuery.Create;
begin

end;

destructor TQuery.Destroy;
begin

  inherited;
end;

function TQuery.ExecSQL(pComando: string): Boolean;
begin

end;

class function TQuery.New():iQuery;
begin
  Result := Self.Create;
end;

function TQuery.Query(pComando: string): TFDQuery;
begin

end;

end.
